* Ideias para implementar:

    - colocar uma API pra verificar numero de telefone
    - Mensagem de perfil editável
    - notificações de postagens
    - tirar espaços digitados da caixa de inserir email
    - link nav mudar cor a partir da dela em que o usuario estiver navegando
    - botao enviar foto disponivel apenas depois da foto ser inserida
    - pesquisar perfil
    - compartilhar imagem
    - tirar espaço de onde ficaria a inserçao de arquivo visitando outro perfil
    - visual de confirmaçao de cadastro
    - foto de perfil
    - botao muda com o site traduzido
    - recuperar senha
    - opção de excluir foto

* Observações:

    - biblioteca instalada, mas não é importada 'email_validator'


* Sequência de criação:

    01. Ambiente virtual
    02. Arquivo main.py
    03. Criar uma pasta com os arquivos __init__.py, forms.py, models.py, routes.py
    04. Usar Flask para criar a aplicação no arquivo __init__.py
    05. Criar execução da aplicação no arquivo main.py
    06. Criar configurações do banco de dados
    07. Montar a estrutura/tabela do banco de dados no arquivo models.py
    08. Criar um arquivo para executar a criação do banco de dados
    09. Implementar sistema de login e cryptografia de senha
    10. Executar criação do banco de dados
    11. Criar estrutura de login
    12. Fazer validação dos formulários de login e cadastro ao enviar as informações
    13. Efetuar o login do usuário após logar ou cadastrar - login_user()
    14. Redirecionar para página de perfil após login ou cadastro
    15. Criar rota de logout da conta
    16. Redirecionar página de perfil caso esteja no próprio perfil ou visitando outro perfil
    17. Criar pasta 'static' para css, imagens utilizadas no site e imagens postadas por usuários
    18. Configurar onde será o upload dos posts no __init__.py
    19. Estilizar as rotas/html
    20. Implementar erros de preenchimento de campos nas rotas/html
